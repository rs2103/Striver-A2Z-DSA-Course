Sum of all divisors from 1 to n
Example 1:

Input:
N = 4
Output:
15
Explanation:
F(1) = 1
F(2) = 1 + 2 = 3
F(3) = 1 + 3 = 4
F(4) = 1 + 2 + 4 = 7
ans = F(1) + F(2) + F(3) + F(4)
    = 1 + 3 + 4 + 7
    = 15

Your Task:  
You don't need to read input or print anything. Your task is to complete the function sumOfDivisors() which takes an integer N as an input parameter and returns an integer.

/*class Solution{
    static long sumOfDivisors(int N){
        // code here
        long totalsum = 0;
        for(int i = 1; i<=N; i++){
            totalsum += sumOfDivisorsnum(i);
        }
        return totalsum;
    }
    static int sumOfDivisorsnum(int num){
        // code here
        int sum = 0;
        for(int i = 1; i<=Math.sqrt(num); i++){
            if(num % i == 0){
                sum = sum +i;
                if(i != num/i){
                    sum += num/i;
                }
            }
        }
        return sum;
    }
}*/


class Solution {
    static long sumOfDivisors(int N) {
        long totalSum = 0;
        
        // Iterate over each integer from 1 to N
        for (int i = 1; i <= N; i++) {
            // Calculate the sum of divisors for i and add it to the total sum
            totalSum += i * (N / i);
        }
        
        return totalSum;
    }
}
