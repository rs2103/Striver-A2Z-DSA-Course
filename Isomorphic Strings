Isomorphic Strings
Given two strings s and t, determine if they are isomorphic.

Two strings s and t are isomorphic if the characters in s can be replaced to get t.

All occurrences of a character must be replaced with another character while preserving the order of characters. No two characters may map to the same character, but a character may map to itself.

Example 1:
Input: s = "egg", t = "add"
Output: true

Example 2:
Input: s = "foo", t = "bar"
Output: false

class Solution {
    public boolean isIsomorphic(String s, String t) {
        if(s.length() != t.length()){
            return false;
        }
        int[] mapST = new int[256];
        int[] mapTS = new int[256];

        for (int i = 0; i < 256; i++) {
            mapST[i] = -1;
            mapTS[i] = -1;
        }

        for (int i = 0; i < s.length(); i++) {
            char charS = s.charAt(i);
            char charT = t.charAt(i);

            if (mapST[charS] == -1 && mapTS[charT] == -1) {
                // Create the new mapping
                mapST[charS] = charT;
                mapTS[charT] = charS;
            } else if (mapST[charS] != charT || mapTS[charT] != charS) {
                // If existing mappings are inconsistent
                return false;
            }
        }

        return true;
    }

}
